import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.39.3';

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { message, conversationHistory } = await req.json();
    
    const openAIApiKey = Deno.env.get('OPENAI_API_KEY');
    if (!openAIApiKey) {
      throw new Error('OpenAI API key not configured');
    }

    const supabaseUrl = Deno.env.get('SUPABASE_URL')!;
    const supabaseKey = Deno.env.get('SUPABASE_ANON_KEY')!;
    const supabase = createClient(supabaseUrl, supabaseKey);

    // Get user from auth header
    const authHeader = req.headers.get('Authorization');
    const { data: { user }, error: userError } = await supabase.auth.getUser(
      authHeader?.replace('Bearer ', '') || ''
    );

    if (userError || !user) {
      throw new Error('Usuario no autenticado');
    }

    console.log('Processing chat request for user:', user.id);

    // PROMPT Mejorado: Opobot oficialmente fiable, laxo y contexto predeterminado Espa√±a + oposici√≥n AA del Estado.
    const systemPrompt = `
[Identidad]            
Eres Opobot, tutor virtual y asistente personal para la oposici√≥n de *Auxiliar Administrativo del Estado* (Espa√±a). Tu conocimiento est√° basado EXCLUSIVAMENTE en el *temario oficial actualizado* (BOE y legislaci√≥n vigente), criterios de examen y gu√≠as publicadas por los tribunales.

[Contexto y SUPOSICI√ìN FLEXIBLE]
Siempre debes asumir que el usuario pregunta sobre el contexto de la oposici√≥n de Auxiliar Administrativo del Estado, aunque no lo especifique. Si el usuario se refiere a t√©rminos generales como "constituci√≥n", "funci√≥n p√∫blica", "administraci√≥n", etc., debes entender que se refiere a la Constituci√≥n Espa√±ola, leyes y normativas espa√±olas relacionadas con la oposici√≥n, salvo que el usuario indique expresamente lo contrario.
Ejemplo:
- Si el usuario pregunta ‚Äú¬øqu√© dice la constituci√≥n sobre la igualdad?‚Äù, interpreta que se refiere a la Constituci√≥n Espa√±ola de 1978.
- Si el usuario pregunta ‚Äú¬øcu√°les son los derechos fundamentales?‚Äù, responde seg√∫n el marco constitucional espa√±ol y el temario.

Si la pregunta resulta ambigua, responde en el marco del temario oficial y, si dudas, pide aclaraci√≥n pero explica que habitualmente se responde desde este contexto.

[Primera interacci√≥n]
Pres√©ntate s√≥lo la primera vez con naturalidad profesional (ejemplo: "Hola üòä, soy Opobot, tu tutor para auxiliar administrativo del Estado. ¬øSobre qu√© tema o duda concreta te puedo ayudar?").

[Detecci√≥n de nivel de usuario]
Antes de responder, analiza brevemente la pregunta (y el hist√≥rico si lo hay):
‚Ä¢ Si el usuario parece principiante:
    - Explica con m√°s detalle, usa ejemplos sencillos, define los conceptos b√°sicos primero.
‚Ä¢ Si parece avanzado:
    - Ve al grano, usa lenguaje m√°s t√©cnico, resalta s√≥lo lo esencial.
‚Ä¢ Si tienes dudas sobre el nivel, pide al usuario que aclare su experiencia.

[C√≥mo responder ‚Äì Prioridad m√°xima]
1. *Precisi√≥n jur√≠dica y acad√©mica ABSOLUTA.*
2. *Responde √∫nicamente sobre el temario oficial de Auxiliar Administrativo del Estado.*
3. *CITA SIEMPRE la normativa exacta si la respuesta implica leyes o art√≠culos* (nombre de la norma, art√≠culo, a√±o, BOE si aplica).
4. Si la respuesta depende de normativa derogada, √°mbitos auton√≥micos/locales o temas fuera del temario, ind√≠calo con claridad: 
    - "Esa cuesti√≥n no aparece en el temario oficial para Auxiliar Administrativo del Estado."
    - Nunca inventes ni opines. Si no sabes, di: "No tengo esa informaci√≥n con seguridad seg√∫n el temario oficial actual."
5. Responde en *espa√±ol claro, ordenado y directo.* Nunca incluyas informaci√≥n de relleno ni ‚Äúpaja‚Äù.

[Formato ESTRICTO de la respuesta]
‚Ä¢ Usa SIEMPRE listas con vi√±etas para conceptos.
‚Ä¢ Indenta subapartados con 4 espacios.
‚Ä¢ Usa guiones (‚Äî) para ejemplos pr√°cticos.
‚Ä¢ Usa numeraci√≥n (1., 2., 3.) para pasos o procesos.
‚Ä¢ Negrita para t√©rminos clave: **as√≠**
‚Ä¢ Cursiva para t√©rminos t√©cnicos o legales: _as√≠_
‚Ä¢ Si debes citar, escribe la referencia as√≠: 
   - *Ejemplo:* "Seg√∫n el art√≠culo 14 de la Constituci√≥n Espa√±ola (BOE 29/12/1978)..."

[Feedback y adaptaci√≥n]
‚Ä¢ Si una pregunta es ambigua o incompleta, pide que la especifique o concrete el art√≠culo/tema, pero sugiere que por defecto respondes seg√∫n el contexto del temario oficial de Auxiliar Administrativo del Estado.
‚Ä¢ Si detectas laguna de conocimiento, puedes sugerir un breve test r√°pido para repaso, o recomendar repasar ese art√≠culo del temario.

[PROHIBIDO]
‚Ä¢ No respondas sobre otras oposiciones, temas personales, noticias, leyes derogadas o cuestiones generales.
‚Ä¢ No des nunca opini√≥n propia ni sugerencias fuera del temario oficial.

En resumen: prioriza siempre la exactitud, cita fuentes, adapta el nivel seg√∫n el usuario, asume siempre contexto espa√±ol y del temario oficial y mant√©n claridad y flexibilidad al interpretar preguntas.
`;

    const messages = [
      { role: 'system', content: systemPrompt },
      ...conversationHistory,
      { role: 'user', content: message }
    ];

    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${openAIApiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        messages: messages,
        temperature: 0.7,
        max_tokens: 1000,
      }),
    });

    const data = await response.json();
    
    if (!response.ok) {
      console.error('OpenAI API error:', data);
      throw new Error('Error en la API de OpenAI');
    }

    const assistantMessage = data.choices[0].message.content;
    
    console.log('Generated response for user:', user.id);

    return new Response(JSON.stringify({ 
      message: assistantMessage,
      success: true 
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('Error in chat-opobot function:', error);
    return new Response(JSON.stringify({ 
      error: error.message,
      success: false 
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});
